// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_BASE_URL")
}

model Admin {
  id            Int           @id @default(autoincrement())
  name          String
  email         String        @unique
  password      String
  refresh_token RefreshToken?
}

model User {
  user_id         Int             @id @default(autoincrement())
  name            String
  created_at      DateTime        @default(now())
  cellphone       String          @unique
  wa_id           String
  custom_services CustomService[]
  Message         Message[]
  Groups          Groups?         @relation(fields: [groups_id], references: [id])
  groups_id       Int?

  @@map("users")
}

model Attendant {
  id         Int      @id @default(autoincrement())
  name       String
  cellphone  String
  wa_id      String
  created_at DateTime @default(now())
  role       Role     @relation(fields: [role_id], references: [id])
  role_id    Int

  @@map("attendants")
}

model CustomService {
  id             String    @id @default(uuid())
  created_at     DateTime  @default(now())
  finished_at    DateTime?
  messages       Message[]
  user           User?     @relation(fields: [user_cellphone], references: [cellphone])
  user_cellphone String

  @@map("services")
}

model Message {
  id                Int            @id @default(autoincrement())
  created_at        DateTime       @default(now())
  text              String
  custom_service    CustomService? @relation(fields: [custom_service_id], references: [id])
  custom_service_id String?
  user              User           @relation(fields: [user_cellphone], references: [cellphone])
  user_cellphone    String

  @@map("messages")
}

model Role {
  role_name  String
  id         Int         @id @default(autoincrement())
  attendants Attendant[]

  @@map("roles")
}

model RefreshToken {
  id        String @id @default(uuid())
  expiresIn Int
  user      Admin  @relation(fields: [u_id], references: [id])
  u_id      Int    @unique

  @@map("refreshToken")
}

model Groups {
  id           Int    @id @default(autoincrement())
  subject      String
  group_name   String
  type         Int
  participants User[]
}
